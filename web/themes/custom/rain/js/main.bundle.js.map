{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./icons/chevron-down.svg","webpack:///./icons/info.svg","webpack:///./icons/more-vertical.svg","webpack:///./icons/move.svg","webpack:///./js/src/cshs.es6.js","webpack:///./js/src/dropbutton.es6.js","webpack:///./js/src/simpler-select.es6.js","webpack:///./js/src/tabledrag.es6.js","webpack:///./scss/style.scss?f7a5","webpack:///./scss/tailwind.scss?1695"],"names":["$","Drupal","behaviors","cshs","attach","context","settings","once","each","idx","element","id","simplerSelect","jQuery","DropButton","dropbutton","options","extend","title","t","$dropbutton","$list","find","$actions","length","$primary","slice","$secondary","addClass","append","theme","on","proxy","hoverOut","hoverIn","focusOut","focusIn","dropbuttonClickHandler","e","preventDefault","target","closest","toggleClass","dropButton","$dropbuttons","$body","il","i","dropbuttons","push","prototype","toggle","show","isBool","hasClass","timerID","window","clearTimeout","setTimeout","open","close","call","dropbuttonToggle","dropbuttonClasses","join","moreVertical","pluginName","defaults","noneLabel","noneValue","labels","Plugin","$element","$currentSelect","selectOptions","init","that","destroy","$option","value","val","label","text","parent","data","children","tree","buildTree","initialValue","initialParents","$selectElement","createSelect","shift","getAllParents","reverse","after","selectSetValue","$nextSelect","getOptionInfoByValue","hide","nextAll","remove","level","wrapperClasses","chevronClasses","chevronElement","chevronDown","selectClasses","selectElement","$select","attr","$wrapper","option","replace","change","selectRemoveNext","$selected","selectedValue","parentValue","undefined","optionInfo","addSelectAfter","selectGetLevel","array","grep","child","parents","$newSelect","getOptionByValue","fn","drupalSettings","showWeight","JSON","parse","localStorage","getItem","tableDrag","initTableDrag","table","base","Object","keys","forEach","tableSettings","self","$table","dragObject","rowObject","oldRowElement","oldY","changed","maxDepth","rtl","css","striping","scrollSettings","amount","interval","trigger","scrollInterval","scrollY","windowHeight","indentEnabled","group","n","relationship","limit","indentCount","indent","testRow","appendTo","testCell","prepend","$indentation","indentAmount","get","offsetLeft","makeDraggable","buttonClasses","before","toggleColumns","wrap","initColumns","document","event","dragRow","originalEvent","touches","dropRow","key","newValue","displayColumns","hidden","cell","columnIndex","some","tableSetting","field","eq","index","addColspanClass","$row","cells","colSpan","filter","displayWeight","showColumns","hideColumns","findOnce","setItem","removeItem","$tables","rowSettings","row","tableSettingsGroup","map","delta","targetClass","is","rowSetting","item","$item","handleClasses","handle","move","$indentationLast","Math","max","type","dragStart","safeBlur","keyCode","keyChange","groupHeight","$previousRow","prev","previousRow","direction","offsetHeight","swap","scrollBy","tBodies","rows","parseInt","$nextRow","next","nextRow","nextGroup","nextGroupRow","removeClass","restripeTable","onDrag","initOffset","getPointerOffset","initPointerCoords","pointerCoords","indentPointerPos","topY","offset","top","bottomY","dragClasses","currentPointerCoords","y","x","scrollAmount","checkScroll","clearInterval","setScroll","currentRow","findDropTargetRow","xDiff","indentDiff","round","indentChange","indents","droppedRow","$droppedRow","updateFields","updateField","markChanged","insertBefore","fadeIn","removeIndentClasses","onDrop","pageX","pageY","clientX","body","scrollLeft","clientLeft","clientY","scrollTop","clientTop","docPos","pointerPos","left","not","rowY","rowHeight","firstChild","o","isValidSwap","changedRow","$changedRow","sourceRow","useSibling","copyDragClasses","source","targetElement","sourceClass","sourceElement","action","siblings","findSiblings","values","maxVal","weight","targetRow","className","cursorY","de","documentElement","b","innerHeight","clientHeight","clientWidth","all","pageYOffset","setInterval","aboveTable","belowTable","end","tableRow","method","addClasses","$tableRow","groupDepth","findChildren","merge","parentIndentation","rowIndentation","indentNum","el","prevRow","validIndentInterval","min","position","detachBehaviors","attachBehaviors","onSwap","$prevRow","maxIndent","minIndent","$group","abs","onIndent","directions","checkRowIndentation","d","checkRow","marker","swappedRow","tableDragChangedMarker","markerClasses","info","tableDragIndentation","tableDragChangedWarning","warningClasses"],"mappings":"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","file":"js/main.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"fill-current h-6 w-6\\\" viewBox=\\\"0 0 20 20\\\"><path d=\\\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\\\"></path></svg>\"","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"stroke-current h-6 w-6 feather feather-info\\\"><circle cx=\\\"12\\\" cy=\\\"12\\\" r=\\\"10\\\"></circle><line x1=\\\"12\\\" y1=\\\"16\\\" x2=\\\"12\\\" y2=\\\"12\\\"></line><line x1=\\\"12\\\" y1=\\\"8\\\" x2=\\\"12\\\" y2=\\\"8\\\"></line></svg>\"","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"fill-current stroke-current h-6 w-6 feather feather-more-vertical\\\"><circle cx=\\\"12\\\" cy=\\\"12\\\" r=\\\"1\\\"></circle><circle cx=\\\"12\\\" cy=\\\"5\\\" r=\\\"1\\\"></circle><circle cx=\\\"12\\\" cy=\\\"19\\\" r=\\\"1\\\"></circle></svg>\"","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\" class=\\\"fill-current stroke-current h-6 w-6\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"feather feather-move\\\"><polyline points=\\\"5 9 2 12 5 15\\\"></polyline><polyline points=\\\"9 5 12 2 15 5\\\"></polyline><polyline points=\\\"15 19 12 22 9 19\\\"></polyline><polyline points=\\\"19 9 22 12 19 15\\\"></polyline><line x1=\\\"2\\\" y1=\\\"12\\\" x2=\\\"22\\\" y2=\\\"12\\\"></line><line x1=\\\"12\\\" y1=\\\"2\\\" x2=\\\"12\\\" y2=\\\"22\\\"></line></svg>\"","/**\n * @file\n * Behavior which initializes the simplerSelect jQuery Plugin.\n */\n\n(function ($) {\n  'use strict';\n\n  Drupal.behaviors.cshs = {\n    attach: function (context, settings) {\n      $('select.simpler-select-root', context)\n        .once('cshs')\n        .each(function (idx, element) {\n          // See if we got settings from Drupal for this field.\n          if (typeof settings.cshs !== 'undefined' && typeof settings.cshs[element.id] !== 'undefined') {\n            $(element).simplerSelect(settings.cshs[element.id]);\n          }\n        }\n        );\n    }\n  };\n})(jQuery);\n","/**\n * @file\n * Dropbutton feature.\n */\n\nimport moreVertical from '../../icons/more-vertical.svg';\n\n(function ($, Drupal) {\n  /**\n   * A DropButton presents an HTML list as a button with a primary action.\n   *\n   * All secondary actions beyond the first in the list are presented in a\n   * dropdown list accessible through a toggle arrow associated with the button.\n   *\n   * @constructor Drupal.DropButton\n   *\n   * @param {HTMLElement} dropbutton\n   *   A DOM element.\n   * @param {object} settings\n   *   A list of options including:\n   * @param {string} settings.title\n   *   The text inside the toggle link element. This text is hidden\n   *   from visual UAs.\n   */\n  function DropButton(dropbutton, settings) {\n    // Merge defaults with settings.\n    const options = $.extend(\n      { title: Drupal.t('List additional actions') },\n      settings,\n    );\n    const $dropbutton = $(dropbutton);\n\n    /**\n     * @type {jQuery}\n     */\n    this.$dropbutton = $dropbutton;\n\n    /**\n     * @type {jQuery}\n     */\n    this.$list = $dropbutton.find('.dropbutton');\n\n    /**\n     * Find actions and mark them.\n     *\n     * @type {jQuery}\n     */\n    this.$actions = this.$list.find('.dropbutton-action');\n\n    // Add the special dropdown only if there are hidden actions.\n    if (this.$actions.length > 1) {\n      // Identify the first element of the collection.\n      const $primary = this.$actions.slice(0, 1);\n      // Identify the secondary actions.\n      const $secondary = this.$actions.slice(1);\n      $secondary.addClass('secondary-action');\n      // Add toggle link.\n      $primary.append(Drupal.theme('dropbuttonToggle', options));\n      // Bind mouse events.\n      this.$dropbutton.addClass('dropbutton-multiple').on({\n        /**\n         * Adds a timeout to close the dropdown on mouseleave.\n         *\n         * @ignore\n         */\n        'mouseleave.dropbutton': $.proxy(this.hoverOut, this),\n\n        /**\n         * Clears timeout when mouseout of the dropdown.\n         *\n         * @ignore\n         */\n        'mouseenter.dropbutton': $.proxy(this.hoverIn, this),\n\n        /**\n         * Similar to mouseleave/mouseenter, but for keyboard navigation.\n         *\n         * @ignore\n         */\n        'focusout.dropbutton': $.proxy(this.focusOut, this),\n\n        /**\n         * @ignore\n         */\n        'focusin.dropbutton': $.proxy(this.focusIn, this),\n      });\n    } else {\n      this.$dropbutton.addClass('dropbutton-single');\n    }\n  }\n\n  /**\n   * Delegated callback for opening and closing dropbutton secondary actions.\n   *\n   * @function Drupal.DropButton~dropbuttonClickHandler\n   *\n   * @param {jQuery.Event} e\n   *   The event triggered.\n   */\n  function dropbuttonClickHandler(e) {\n    e.preventDefault();\n    $(e.target)\n      .closest('.dropbutton-wrapper')\n      .toggleClass('open');\n  }\n\n  /**\n   * Process elements with the .dropbutton class on page load.\n   *\n   * @type {Drupal~behavior}\n   *\n   * @prop {Drupal~behaviorAttach} attach\n   *   Attaches dropButton behaviors.\n   */\n  Drupal.behaviors.dropButton = {\n    attach(context, settings) {\n      const $dropbuttons = $(context)\n        .find('.dropbutton-wrapper')\n        .once('dropbutton');\n      if ($dropbuttons.length) {\n        // Adds the delegated handler that will toggle dropdowns on click.\n        const $body = $('body').once('dropbutton-click');\n        if ($body.length) {\n          $body.on('click', '.dropbutton-toggle', dropbuttonClickHandler);\n        }\n        // Initialize all buttons.\n        const il = $dropbuttons.length;\n        for (let i = 0; i < il; i++) {\n          DropButton.dropbuttons.push(\n            new DropButton($dropbuttons[i], settings.dropbutton),\n          );\n        }\n      }\n    },\n  };\n\n  /**\n   * Extend the DropButton constructor.\n   */\n  $.extend(\n    DropButton,\n    /** @lends Drupal.DropButton */ {\n      /**\n       * Store all processed DropButtons.\n       *\n       * @type {Array.<Drupal.DropButton>}\n       */\n      dropbuttons: [],\n    },\n  );\n\n  /**\n   * Extend the DropButton prototype.\n   */\n  $.extend(\n    DropButton.prototype,\n    /** @lends Drupal.DropButton# */ {\n      /**\n       * Toggle the dropbutton open and closed.\n       *\n       * @param {bool} [show]\n       *   Force the dropbutton to open by passing true or to close by\n       *   passing false.\n       */\n      toggle(show) {\n        const isBool = typeof show === 'boolean';\n        show = isBool ? show : !this.$dropbutton.hasClass('open');\n        this.$dropbutton.toggleClass('open', show);\n      },\n\n      /**\n       * @method\n       */\n      hoverIn() {\n        // Clear any previous timer we were using.\n        if (this.timerID) {\n          window.clearTimeout(this.timerID);\n        }\n      },\n\n      /**\n       * @method\n       */\n      hoverOut() {\n        // Wait half a second before closing.\n        this.timerID = window.setTimeout($.proxy(this, 'close'), 500);\n      },\n\n      /**\n       * @method\n       */\n      open() {\n        this.toggle(true);\n      },\n\n      /**\n       * @method\n       */\n      close() {\n        this.toggle(false);\n      },\n\n      /**\n       * @param {jQuery.Event} e\n       *   The event triggered.\n       */\n      focusOut(e) {\n        this.hoverOut.call(this, e);\n      },\n\n      /**\n       * @param {jQuery.Event} e\n       *   The event triggered.\n       */\n      focusIn(e) {\n        this.hoverIn.call(this, e);\n      },\n    },\n  );\n\n  $.extend(\n    Drupal.theme,\n    /** @lends Drupal.theme */ {\n      /**\n       * A toggle is an interactive element often bound to a click handler.\n       *\n       * @param {object} options\n       *   Options object.\n       * @param {string} [options.title]\n       *   The button text.\n       *\n       * @return {string}\n       *   A string representing a DOM fragment.\n       */\n\n      dropbuttonToggle(options) {\n        const dropbuttonClasses = [\n          'dropbutton-toggle',\n          'border-l',\n          'pl-3',\n          'flex',\n        ];\n\n        return `<span class=\"${dropbuttonClasses.join(' ')}\">\n          <span class=\"visually-hidden\">${options.title}</span>\n          <button class=\"flex\" type=\"button\">\n            ${moreVertical}\n          </button>\n        </span>`;\n      },\n    },\n  );\n\n  // Expose constructor in the public space.\n  Drupal.DropButton = DropButton;\n})(jQuery, Drupal);\n","/**\n * @file\n * Render standard select with hierarchical options: as set of selects, one for each level of the hierarchy.\n */\nimport chevronDown from '../../icons/chevron-down.svg';\n\n(function ($, pluginName) {\n  'use strict';\n\n  // Create the defaults once.\n  var defaults = {\n    noneLabel: '- Please choose -',\n    noneValue: '_none',\n    labels: []\n  };\n\n  // The actual plugin constructor.\n  function Plugin(element, options) {\n    this.$element = $(element);\n    this.$currentSelect = null;\n\n    this.settings = $.extend({}, defaults, options);\n    this.selectOptions = [];\n\n    this.init();\n  }\n\n  Plugin.prototype = {\n    init: function () {\n      var that = this;\n      // Ensure that we'll clearly initiate a new instance.\n      that.destroy();\n      that.$element.find('option').each(function () {\n        var $option = $(this);\n\n        that.selectOptions.push({\n          value: $option.val(),\n          label: $option.text(),\n          parent: $option.data('parent') || 0,\n          children: []\n        });\n      });\n\n      var tree = that.buildTree(that.selectOptions);\n\n      if (tree === null) {\n        return;\n      }\n\n      var initialValue = that.$element.val();\n      var initialParents = [];\n      var $selectElement = that.createSelect(tree);\n      var $currentSelect = $selectElement;\n\n      if (initialValue) {\n        if (typeof initialValue !== 'string') {\n          // If array, flatten it.\n          initialValue = initialValue.shift();\n        }\n\n        // Get all parents, starting from the initial value.\n        initialParents = that.getAllParents(initialValue);\n        // Reverse the parents, that they start from the root.\n        initialParents.reverse();\n        // Add the current value as the last leave.\n        initialParents.push(initialValue);\n      }\n\n      this.$element.after($selectElement);\n\n      $.each(initialParents, function (i, value) {\n        that.selectSetValue($currentSelect, value);\n\n        var $nextSelect = that.createSelect(that.getOptionInfoByValue(value).children, value, i + 1);\n\n        if (null !== $nextSelect) {\n          $currentSelect.after($nextSelect);\n          $currentSelect = $nextSelect;\n        }\n      });\n\n      // Hide the original.\n      that.$element.hide();\n    },\n\n    /**\n     * Destroy CSHS.\n     */\n    destroy: function () {\n      this.selectOptions = [];\n      this.$element.show().nextAll('.select-wrapper').remove();\n    },\n\n    /**\n     * Given an array of options, build an HTML select element.\n     *\n     * @param {HTMLElement[]|HTMLOptionElement[]} options\n     *   List of options.\n     * @param {String} [parent]\n     *   Parent option.\n     * @param {Number} [level]\n     *   Nesting level.\n     *\n     * @return {jQuery|null}\n     *   Newly created element.\n     */\n    createSelect: function (options, parent, level) {\n      if (!options || options.length < 1) {\n        return null;\n      }\n\n      parent = parent || this.settings.noneValue;\n      level = level || 0;\n\n      const wrapperClasses = [\n        'select-wrapper',\n        'relative',\n      ];\n\n      const chevronClasses = [\n        'pointer-events-none',\n        'absolute',\n        'pin-y',\n        'pin-r',\n        'flex',\n        'items-center',\n        'px-2',\n      ];\n\n      const chevronElement = `\n      <div class=\"${chevronClasses.join(' ')}\">\n      ${chevronDown}\n      </div>\n      `;\n\n      const selectClasses = [\n        'simpler-select',\n        'w-full',\n      ];\n\n      const selectElement = `<select class=\"${selectClasses.join(' ')}\">`\n\n      var that = this;\n      var $select = $(selectElement).addClass(that.$element.attr('class'));\n      var $wrapper = $(`<div class=\"${wrapperClasses.join(' ')}\">`);\n\n      if (that.$element.hasClass('error')) {\n        $select.addClass('error');\n      }\n\n      // Always add the \"_none\" option.\n      $select.append('<option value=\"' + that.settings.noneValue + '\" data-parent-value=\"' + parent + '\">' + that.settings.noneLabel + '</option>');\n\n      $.each(options, function (i, option) {\n        // Do not add \"_none\" option (already added by code above).\n        if (option.value != that.settings.noneValue) {\n          var $option = $('<option>')\n            .val(option.value)\n            // Remove dashes from the beginning, then set the label.\n            .text(option.label.replace(/(- )+/, ''));\n\n          if (option.children.length) {\n            $option.addClass('has-children');\n          }\n\n          $select.append($option);\n        }\n      });\n\n      $select.change(function () {\n        that.$currentSelect = $(this);\n        // Remove deeper selects.\n        that.selectRemoveNext(that.$currentSelect);\n\n        // Get the selected value and also set the original drop-down.\n        var $selected = that.$currentSelect.find('option:selected');\n        var selectedValue = $selected.val();\n        var parentValue = $selected.data('parent-value');\n\n        if (undefined === parentValue) {\n          parentValue = selectedValue;\n        }\n\n        that.$element\n          .val(parentValue)\n          .change();\n\n        if (selectedValue == that.settings.noneValue) {\n          return;\n        }\n\n        // Build new child select.\n        var optionInfo = that.getOptionInfoByValue(selectedValue);\n\n        if (undefined !== optionInfo.children) {\n          that.addSelectAfter(that.createSelect(optionInfo.children, selectedValue, that.selectGetLevel()));\n        }\n      });\n\n      if (that.settings.labels[level]) {\n        $wrapper.append('<label>' + that.settings.labels[level] + '</label>');\n      }\n\n      $wrapper.append($select);\n      $wrapper.append(chevronElement);\n\n      return $wrapper;\n    },\n\n    /**\n     * Given an flat array an tree is built.\n     *\n     * @param {Object[]} array\n     *   Options list.\n     * @param {Object} [parent]\n     *   Parent option.\n     * @param {Array} [tree]\n     *   Existing options.\n     *\n     * @return {Array}\n     *   Options tree.\n     */\n    buildTree: function (array, parent, tree) {\n      tree = tree || [];\n      parent = parent || { value: 0 };\n\n      var children = $.grep(array, function (child) {\n        // Here must be no strict comparison!\n        return undefined !== child && child.parent == parent.value;\n      });\n\n      if (children.length) {\n        if (0 == parent.value) {\n          tree = children;\n        }\n        else {\n          parent.children = children;\n        }\n\n        for (var i = 0; i < children.length; i++) {\n          this.buildTree(array, children[i], tree);\n        }\n      }\n\n      return tree;\n    },\n\n    /**\n     * Set the value of a select to the given.\n     *\n     * @param {jQuery} $select\n     *   Wrapper element.\n     * @param {String} value\n     *   New value to set.\n     */\n    selectSetValue: function ($select, value) {\n      $select.find('select').val(value);\n    },\n\n    /**\n     * Remove all following selects.\n     */\n    selectRemoveNext: function () {\n      this.$currentSelect\n        .parents('.select-wrapper')\n        .nextAll('.select-wrapper')\n        .remove();\n    },\n\n    /**\n     * Add a newSelect after the currentSelect.\n     *\n     * @param {jQuery} $newSelect\n     *   New \"select\" element.\n     */\n    addSelectAfter: function ($newSelect) {\n      this.$currentSelect.parents('.select-wrapper').after($newSelect);\n    },\n\n    /**\n     * Get the hierarchy level of given select.\n     *\n     * @return {Number}\n     *   Number of wrappers.\n     */\n    selectGetLevel: function () {\n      return this.$currentSelect.parents('.form-type-cshs').find('.select-wrapper').length;\n    },\n\n    /**\n     * Given a value build an array of all parents (from leave to root).\n     *\n     * @param {String} value\n     *   Value of option.\n     * @param {Array} [parents]\n     *   Parent options.\n     *\n     * @return {Array}\n     *   Updated parent options list.\n     */\n    getAllParents: function (value, parents) {\n      if (value == this.settings.noneValue) {\n        return [];\n      }\n\n      parents = parents || [];\n\n      var parent = this.getOptionByValue(value).data('parent');\n\n      if (undefined !== parent && 0 != parent) {\n        parents.push(parent);\n        this.getAllParents(this.getOptionByValue(parent).val(), parents);\n      }\n\n      return parents;\n    },\n\n    /**\n     * Tiny helper to get the option jQuery object.\n     *\n     * @param {String} value\n     *   Value of an option.\n     *\n     * @return {jQuery}\n     *   Element.\n     */\n    getOptionByValue: function (value) {\n      return this.$element.find('option[value=\"' + value + '\"]');\n    },\n\n    /**\n     * Helper to get the info-object which corresponds to an option value.\n     *\n     * @param {String} value\n     *   Value of an option.\n     *\n     * @return {Object}\n     *   Element.\n     */\n    getOptionInfoByValue: function (value) {\n      var optionInfo = {};\n\n      $.each(this.selectOptions, function (idx, option) {\n        if (option.value == value) {\n          optionInfo = option;\n          return false;\n        }\n      });\n\n      return optionInfo;\n    }\n  };\n\n  // A really lightweight plugin wrapper around the constructor,\n  // preventing against multiple instantiations.\n  $.fn[pluginName] = function (options) {\n    this.each(function () {\n      if (!$.data(this, 'plugin_' + pluginName)) {\n        $.data(this, 'plugin_' + pluginName, new Plugin(this, options));\n      }\n    });\n\n    return this;\n  };\n})(jQuery, 'simplerSelect');\n","/**\n * @file\n * Provide dragging capabilities to admin uis.\n */\n\n/**\n * Triggers when weights columns are toggled.\n *\n * @event columnschange\n */\nimport move from '../../icons/move.svg';\nimport info from '../../icons/info.svg';\n\n(function ($, Drupal, drupalSettings) {\n  /**\n   * Store the state of weight columns display for all tables.\n   *\n   * Default value is to hide weight columns.\n   */\n  let showWeight = JSON.parse(\n    localStorage.getItem('Drupal.tableDrag.showWeight'),\n  );\n\n  /**\n   * Drag and drop table rows with field manipulation.\n   *\n   * Using the drupal_attach_tabledrag() function, any table with weights or\n   * parent relationships may be made into draggable tables. Columns containing\n   * a field may optionally be hidden, providing a better user experience.\n   *\n   * Created tableDrag instances may be modified with custom behaviors by\n   * overriding the .onDrag, .onDrop, .row.onSwap, and .row.onIndent methods.\n   * See blocks.js for an example of adding additional functionality to\n   * tableDrag.\n   *\n   * @type {Drupal~behavior}\n   */\n  Drupal.behaviors.tableDrag = {\n    attach(context, settings) {\n      function initTableDrag(table, base) {\n        if (table.length) {\n          // Create the new tableDrag instance. Save in the Drupal variable\n          // to allow other scripts access to the object.\n          Drupal.tableDrag[base] = new Drupal.tableDrag(\n            table[0],\n            settings.tableDrag[base],\n          );\n        }\n      }\n\n      Object.keys(settings.tableDrag || {}).forEach(base => {\n        initTableDrag(\n          $(context)\n            .find(`#${base}`)\n            .once('tabledrag'),\n          base,\n        );\n      });\n    },\n  };\n\n  /**\n   * Provides table and field manipulation.\n   *\n   * @constructor\n   *\n   * @param {HTMLElement} table\n   *   DOM object for the table to be made draggable.\n   * @param {object} tableSettings\n   *   Settings for the table added via drupal_add_dragtable().\n   */\n  Drupal.tableDrag = function (table, tableSettings) {\n    const self = this;\n    const $table = $(table);\n\n    /**\n     * @type {jQuery}\n     */\n    this.$table = $(table);\n\n    /**\n     *\n     * @type {HTMLElement}\n     */\n    this.table = table;\n\n    /**\n     * @type {object}\n     */\n    this.tableSettings = tableSettings;\n\n    /**\n     * Used to hold information about a current drag operation.\n     *\n     * @type {?HTMLElement}\n     */\n    this.dragObject = null;\n\n    /**\n     * Provides operations for row manipulation.\n     *\n     * @type {?HTMLElement}\n     */\n    this.rowObject = null;\n\n    /**\n     * Remember the previous element.\n     *\n     * @type {?HTMLElement}\n     */\n    this.oldRowElement = null;\n\n    /**\n     * Used to determine up or down direction from last mouse move.\n     *\n     * @type {number}\n     */\n    this.oldY = 0;\n\n    /**\n     * Whether anything in the entire table has changed.\n     *\n     * @type {bool}\n     */\n    this.changed = false;\n\n    /**\n     * Maximum amount of allowed parenting.\n     *\n     * @type {number}\n     */\n    this.maxDepth = 0;\n\n    /**\n     * Direction of the table.\n     *\n     * @type {number}\n     */\n    this.rtl = $(this.table).css('direction') === 'rtl' ? -1 : 1;\n\n    /**\n     *\n     * @type {bool}\n     */\n    this.striping = $(this.table).data('striping') === 1;\n\n    /**\n     * Configure the scroll settings.\n     *\n     * @type {object}\n     *\n     * @prop {number} amount\n     * @prop {number} interval\n     * @prop {number} trigger\n     */\n    this.scrollSettings = { amount: 4, interval: 50, trigger: 70 };\n\n    /**\n     *\n     * @type {?number}\n     */\n    this.scrollInterval = null;\n\n    /**\n     *\n     * @type {number}\n     */\n    this.scrollY = 0;\n\n    /**\n     *\n     * @type {number}\n     */\n    this.windowHeight = 0;\n\n    /**\n     * Check this table's settings for parent relationships.\n     *\n     * For efficiency, large sections of code can be skipped if we don't need to\n     * track horizontal movement and indentations.\n     *\n     * @type {bool}\n     */\n    this.indentEnabled = false;\n    Object.keys(tableSettings || {}).forEach(group => {\n      Object.keys(tableSettings[group] || {}).forEach(n => {\n        if (tableSettings[group][n].relationship === 'parent') {\n          this.indentEnabled = true;\n        }\n        if (tableSettings[group][n].limit > 0) {\n          this.maxDepth = tableSettings[group][n].limit;\n        }\n      });\n    });\n    if (this.indentEnabled) {\n      /**\n       * Total width of indents, set in makeDraggable.\n       *\n       * @type {number}\n       */\n      this.indentCount = 1;\n      // Find the width of indentations to measure mouse movements against.\n      // Because the table doesn't need to start with any indentations, we\n      // manually append 2 indentations in the first draggable row, measure\n      // the offset, then remove.\n      const indent = Drupal.theme('tableDragIndentation');\n      const testRow = $('<tr/>')\n        .addClass('draggable')\n        .appendTo(table);\n      const testCell = $('<td/>')\n        .appendTo(testRow)\n        .prepend(indent)\n        .prepend(indent);\n      const $indentation = testCell.find('.js-indentation');\n\n      /**\n       *\n       * @type {number}\n       */\n      this.indentAmount =\n        $indentation.get(1).offsetLeft - $indentation.get(0).offsetLeft;\n      testRow.remove();\n    }\n\n    // Make each applicable row draggable.\n    // Match immediate children of the parent element to allow nesting.\n    $table.find('> tr.draggable, > tbody > tr.draggable').each(function () {\n      self.makeDraggable(this);\n    });\n\n    const buttonClasses = [\n      'tabledrag-toggle-weight',\n      'ml-auto',\n      'bg-cyan',\n      'appearance-none',\n      'border-2',\n      'border-cyan-darker',\n      'rounded-lg',\n      'py-2',\n      'px-4',\n      'text-white',\n      'leading-tight',\n      'focus:outline-none',\n      'focus:bg-cyan-dark',\n      'focus:border-cyan-darker',\n      'hover:border-cyan'\n    ];\n\n    // Add a link before the table for users to show or hide weight columns.\n    $table.before(\n      $(`<button type=\"button\" class=\"${buttonClasses.join(' ')}\"></button>`)\n        .attr(\n          'title',\n          Drupal.t('Re-order rows by numerical weight instead of dragging.'),\n        )\n        .on(\n          'click',\n          $.proxy(function (e) {\n            e.preventDefault();\n            this.toggleColumns();\n          }, this),\n        )\n        .wrap('<div class=\"flex flex-col items-end mb-3\"></div>')\n        .parent(),\n    );\n\n    // Initialize the specified columns (for example, weight or parent columns)\n    // to show or hide according to user preference. This aids accessibility\n    // so that, e.g., screen reader users can choose to enter weight values and\n    // manipulate form elements directly, rather than using drag-and-drop..\n    self.initColumns();\n\n    // Add event bindings to the document. The self variable is passed along\n    // as event handlers do not have direct access to the tableDrag object.\n    $(document).on('touchmove', event =>\n      self.dragRow(event.originalEvent.touches[0], self),\n    );\n    $(document).on('touchend', event =>\n      self.dropRow(event.originalEvent.touches[0], self),\n    );\n    $(document).on('mousemove pointermove', event => self.dragRow(event, self));\n    $(document).on('mouseup pointerup', event => self.dropRow(event, self));\n\n    // React to localStorage event showing or hiding weight columns.\n    $(window).on(\n      'storage',\n      $.proxy(function (e) {\n        // Only react to 'Drupal.tableDrag.showWeight' value change.\n        if (e.originalEvent.key === 'Drupal.tableDrag.showWeight') {\n          // This was changed in another window, get the new value for this\n          // window.\n          showWeight = JSON.parse(e.originalEvent.newValue);\n          this.displayColumns(showWeight);\n        }\n      }, this),\n    );\n  };\n\n  /**\n   * Initialize columns containing form elements to be hidden by default.\n   *\n   * Identify and mark each cell with a CSS class so we can easily toggle\n   * show/hide it. Finally, hide columns if user does not have a\n   * 'Drupal.tableDrag.showWeight' localStorage value.\n   */\n  Drupal.tableDrag.prototype.initColumns = function () {\n    const $table = this.$table;\n    let hidden;\n    let cell;\n    let columnIndex;\n    Object.keys(this.tableSettings || {}).forEach(group => {\n      // Find the first field in this group.\n      Object.keys(this.tableSettings[group]).some(tableSetting => {\n        const field = $table\n          .find(`.${this.tableSettings[group][tableSetting].target}`)\n          .eq(0);\n        if (field.length && this.tableSettings[group][tableSetting].hidden) {\n          hidden = this.tableSettings[group][tableSetting].hidden;\n          cell = field.closest('td');\n          return true;\n        }\n        return false;\n      });\n\n      // Mark the column containing this field so it can be hidden.\n      if (hidden && cell[0]) {\n        // Add 1 to our indexes. The nth-child selector is 1 based, not 0\n        // based. Match immediate children of the parent element to allow\n        // nesting.\n        columnIndex =\n          cell\n            .parent()\n            .find('> td')\n            .index(cell.get(0)) + 1;\n        $table\n          .find('> thead > tr, > tbody > tr, > tr')\n          .each(this.addColspanClass(columnIndex));\n      }\n    });\n    this.displayColumns(showWeight);\n  };\n\n  /**\n   * Mark cells that have colspan.\n   *\n   * In order to adjust the colspan instead of hiding them altogether.\n   *\n   * @param {number} columnIndex\n   *   The column index to add colspan class to.\n   *\n   * @return {function}\n   *   Function to add colspan class.\n   */\n  Drupal.tableDrag.prototype.addColspanClass = function (columnIndex) {\n    return function () {\n      // Get the columnIndex and adjust for any colspans in this row.\n      const $row = $(this);\n      let index = columnIndex;\n      const cells = $row.children();\n      let cell;\n      cells.each(function (n) {\n        if (n < index && this.colSpan && this.colSpan > 1) {\n          index -= this.colSpan - 1;\n        }\n      });\n      if (index > 0) {\n        cell = cells.filter(`:nth-child(${index})`);\n        if (cell[0].colSpan && cell[0].colSpan > 1) {\n          // If this cell has a colspan, mark it so we can reduce the colspan.\n          cell.addClass('tabledrag-has-colspan');\n        } else {\n          // Mark this cell so we can hide it.\n          cell.addClass('tabledrag-hide');\n        }\n      }\n    };\n  };\n\n  /**\n   * Hide or display weight columns. Triggers an event on change.\n   *\n   * @fires event:columnschange\n   *\n   * @param {bool} displayWeight\n   *   'true' will show weight columns.\n   */\n  Drupal.tableDrag.prototype.displayColumns = function (displayWeight) {\n    if (displayWeight) {\n      this.showColumns();\n    }\n    // Default action is to hide columns.\n    else {\n      this.hideColumns();\n    }\n    // Trigger an event to allow other scripts to react to this display change.\n    // Force the extra parameter as a bool.\n    $('table')\n      .findOnce('tabledrag')\n      .trigger('columnschange', !!displayWeight);\n  };\n\n  /**\n   * Toggle the weight column depending on 'showWeight' value.\n   *\n   * Store only default override.\n   */\n  Drupal.tableDrag.prototype.toggleColumns = function () {\n    showWeight = !showWeight;\n    this.displayColumns(showWeight);\n    if (showWeight) {\n      // Save default override.\n      localStorage.setItem('Drupal.tableDrag.showWeight', showWeight);\n    } else {\n      // Reset the value to its default.\n      localStorage.removeItem('Drupal.tableDrag.showWeight');\n    }\n  };\n\n  /**\n   * Hide the columns containing weight/parent form elements.\n   *\n   * Undo showColumns().\n   */\n  Drupal.tableDrag.prototype.hideColumns = function () {\n    const $tables = $('table').findOnce('tabledrag');\n    // Hide weight/parent cells and headers.\n    $tables.find('.tabledrag-hide').css('display', 'none');\n    // Show TableDrag handles.\n    $tables.find('.tabledrag-handle').css('display', '');\n    // Reduce the colspan of any effected multi-span columns.\n    $tables.find('.tabledrag-has-colspan').each(function () {\n      this.colSpan = this.colSpan - 1;\n    });\n    // Change link text.\n    $('.tabledrag-toggle-weight').text(Drupal.t('Show row weights'));\n  };\n\n  /**\n   * Show the columns containing weight/parent form elements.\n   *\n   * Undo hideColumns().\n   */\n  Drupal.tableDrag.prototype.showColumns = function () {\n    const $tables = $('table').findOnce('tabledrag');\n    // Show weight/parent cells and headers.\n    $tables.find('.tabledrag-hide').css('display', '');\n    // Hide TableDrag handles.\n    $tables.find('.tabledrag-handle').css('display', 'none');\n    // Increase the colspan for any columns where it was previously reduced.\n    $tables.find('.tabledrag-has-colspan').each(function () {\n      this.colSpan = this.colSpan + 1;\n    });\n    // Change link text.\n    $('.tabledrag-toggle-weight').text(Drupal.t('Hide row weights'));\n  };\n\n  /**\n   * Find the target used within a particular row and group.\n   *\n   * @param {string} group\n   *   Group selector.\n   * @param {HTMLElement} row\n   *   The row HTML element.\n   *\n   * @return {object}\n   *   The table row settings.\n   */\n  Drupal.tableDrag.prototype.rowSettings = function (group, row) {\n    const field = $(row).find(`.${group}`);\n    const tableSettingsGroup = this.tableSettings[group];\n    return Object.keys(tableSettingsGroup)\n      .map(delta => {\n        const targetClass = tableSettingsGroup[delta].target;\n        let rowSettings;\n        if (field.is(`.${targetClass}`)) {\n          // Return a copy of the row settings.\n          rowSettings = {};\n          Object.keys(tableSettingsGroup[delta]).forEach(n => {\n            rowSettings[n] = tableSettingsGroup[delta][n];\n          });\n        }\n        return rowSettings;\n      })\n      .filter(rowSetting => rowSetting)[0];\n  };\n\n  /**\n   * Take an item and add event handlers to make it become draggable.\n   *\n   * @param {HTMLElement} item\n   *   The item to add event handlers to.\n   */\n  Drupal.tableDrag.prototype.makeDraggable = function (item) {\n    const self = this;\n    const $item = $(item);\n    // Add a class to the title link.\n    $item\n      .find('td:first-of-type')\n      .find('a')\n      .addClass('menu-item__link');\n    // Create the handle.\n    const handleClasses = [\n      'tabledrag-handle',\n      'handle',\n      'cursor-move',\n      'align-middle',\n      'h-4',\n      'w-4',\n      'mr-3',\n    ];\n    const handle = $(\n      `<span class=\"${handleClasses.join(' ')}\">${move}</span>`,\n    ).attr('title', Drupal.t('Drag to re-order'));\n    // Insert the handle after indentations (if any).\n    const $indentationLast = $item\n      .find('td:first-of-type')\n      .find('.js-indentation')\n      .eq(-1);\n    if ($indentationLast.length) {\n      $indentationLast.after(handle);\n      // Update the total width of indentation in this entire table.\n      self.indentCount = Math.max(\n        $item.find('.js-indentation').length,\n        self.indentCount,\n      );\n    } else {\n      $item\n        .find('td')\n        .eq(0)\n        .prepend(handle);\n    }\n\n    handle.on('mousedown touchstart pointerdown', event => {\n      event.preventDefault();\n      if (event.originalEvent.type === 'touchstart') {\n        event = event.originalEvent.touches[0];\n      }\n      self.dragStart(event, self, item);\n    });\n\n    // Prevent the anchor tag from jumping us to the top of the page.\n    handle.on('click', e => {\n      e.preventDefault();\n    });\n\n    // Set blur cleanup when a handle is focused.\n    handle.on('focus', () => {\n      self.safeBlur = true;\n    });\n\n    // On blur, fire the same function as a touchend/mouseup. This is used to\n    // update values after a row has been moved through the keyboard support.\n    handle.on('blur', event => {\n      if (self.rowObject && self.safeBlur) {\n        self.dropRow(event, self);\n      }\n    });\n\n    // Add arrow-key support to the handle.\n    handle.on('keydown', event => {\n      // If a rowObject doesn't yet exist and this isn't the tab key.\n      if (event.keyCode !== 9 && !self.rowObject) {\n        self.rowObject = new self.row(\n          item,\n          'keyboard',\n          self.indentEnabled,\n          self.maxDepth,\n          true,\n        );\n      }\n\n      let keyChange = false;\n      let groupHeight;\n\n      /* eslint-disable no-fallthrough */\n\n      switch (event.keyCode) {\n        // Left arrow.\n        case 37:\n        // Safari left arrow.\n        case 63234:\n          keyChange = true;\n          self.rowObject.indent(-1 * self.rtl);\n          break;\n\n        // Up arrow.\n        case 38:\n        // Safari up arrow.\n        case 63232: {\n          let $previousRow = $(self.rowObject.element).prev('tr:first-of-type');\n          let previousRow = $previousRow.get(0);\n          while (previousRow && $previousRow.is(':hidden')) {\n            $previousRow = $(previousRow).prev('tr:first-of-type');\n            previousRow = $previousRow.get(0);\n          }\n          if (previousRow) {\n            // Do not allow the onBlur cleanup.\n            self.safeBlur = false;\n            self.rowObject.direction = 'up';\n            keyChange = true;\n\n            if ($(item).is('.tabledrag-root')) {\n              // Swap with the previous top-level row.\n              groupHeight = 0;\n              while (\n                previousRow &&\n                $previousRow.find('.js-indentation').length\n              ) {\n                $previousRow = $(previousRow).prev('tr:first-of-type');\n                previousRow = $previousRow.get(0);\n                groupHeight += $previousRow.is(':hidden')\n                  ? 0\n                  : previousRow.offsetHeight;\n              }\n              if (previousRow) {\n                self.rowObject.swap('before', previousRow);\n                // No need to check for indentation, 0 is the only valid one.\n                window.scrollBy(0, -groupHeight);\n              }\n            } else if (\n              self.table.tBodies[0].rows[0] !== previousRow ||\n              $previousRow.is('.draggable')\n            ) {\n              // Swap with the previous row (unless previous row is the first\n              // one and undraggable).\n              self.rowObject.swap('before', previousRow);\n              self.rowObject.interval = null;\n              self.rowObject.indent(0);\n              window.scrollBy(0, -parseInt(item.offsetHeight, 10));\n            }\n            // Regain focus after the DOM manipulation.\n            handle.trigger('focus');\n          }\n          break;\n        }\n        // Right arrow.\n        case 39:\n        // Safari right arrow.\n        case 63235:\n          keyChange = true;\n          self.rowObject.indent(self.rtl);\n          break;\n\n        // Down arrow.\n        case 40:\n        // Safari down arrow.\n        case 63233: {\n          let $nextRow = $(self.rowObject.group)\n            .eq(-1)\n            .next('tr:first-of-type');\n          let nextRow = $nextRow.get(0);\n          while (nextRow && $nextRow.is(':hidden')) {\n            $nextRow = $(nextRow).next('tr:first-of-type');\n            nextRow = $nextRow.get(0);\n          }\n          if (nextRow) {\n            // Do not allow the onBlur cleanup.\n            self.safeBlur = false;\n            self.rowObject.direction = 'down';\n            keyChange = true;\n\n            if ($(item).is('.tabledrag-root')) {\n              // Swap with the next group (necessarily a top-level one).\n              groupHeight = 0;\n              const nextGroup = new self.row(\n                nextRow,\n                'keyboard',\n                self.indentEnabled,\n                self.maxDepth,\n                false,\n              );\n              if (nextGroup) {\n                $(nextGroup.group).each(function () {\n                  groupHeight += $(this).is(':hidden') ? 0 : this.offsetHeight;\n                });\n                const nextGroupRow = $(nextGroup.group)\n                  .eq(-1)\n                  .get(0);\n                self.rowObject.swap('after', nextGroupRow);\n                // No need to check for indentation, 0 is the only valid one.\n                window.scrollBy(0, parseInt(groupHeight, 10));\n              }\n            } else {\n              // Swap with the next row.\n              self.rowObject.swap('after', nextRow);\n              self.rowObject.interval = null;\n              self.rowObject.indent(0);\n              window.scrollBy(0, parseInt(item.offsetHeight, 10));\n            }\n            // Regain focus after the DOM manipulation.\n            handle.trigger('focus');\n          }\n          break;\n        }\n      }\n\n      /* eslint-enable no-fallthrough */\n\n      if (self.rowObject && self.rowObject.changed === true) {\n        $(item).addClass('drag');\n        if (self.oldRowElement) {\n          $(self.oldRowElement).removeClass('drag-previous');\n        }\n        self.oldRowElement = item;\n        if (self.striping === true) {\n          self.restripeTable();\n        }\n        self.onDrag();\n      }\n\n      // Returning false if we have an arrow key to prevent scrolling.\n      if (keyChange) {\n        return false;\n      }\n    });\n\n    // Compatibility addition, return false on keypress to prevent unwanted\n    // scrolling. IE and Safari will suppress scrolling on keydown, but all\n    // other browsers need to return false on keypress.\n    // http://www.quirksmode.org/js/keys.html\n    handle.on('keypress', event => {\n      /* eslint-disable no-fallthrough */\n\n      switch (event.keyCode) {\n        // Left arrow.\n        case 37:\n        // Up arrow.\n        case 38:\n        // Right arrow.\n        case 39:\n        // Down arrow.\n        case 40:\n          return false;\n      }\n\n      /* eslint-enable no-fallthrough */\n    });\n  };\n\n  /**\n   * Pointer event initiator, creates drag object and information.\n   *\n   * @param {jQuery.Event} event\n   *   The event object that trigger the drag.\n   * @param {Drupal.tableDrag} self\n   *   The drag handle.\n   * @param {HTMLElement} item\n   *   The item that that is being dragged.\n   */\n  Drupal.tableDrag.prototype.dragStart = function (event, self, item) {\n    // Create a new dragObject recording the pointer information.\n    self.dragObject = {};\n    self.dragObject.initOffset = self.getPointerOffset(item, event);\n    self.dragObject.initPointerCoords = self.pointerCoords(event);\n    if (self.indentEnabled) {\n      self.dragObject.indentPointerPos = self.dragObject.initPointerCoords;\n    }\n\n    // If there's a lingering row object from the keyboard, remove its focus.\n    if (self.rowObject) {\n      $(self.rowObject.element)\n        .find('a.tabledrag-handle')\n        .trigger('blur');\n    }\n\n    // Create a new rowObject for manipulation of this row.\n    self.rowObject = new self.row(\n      item,\n      'pointer',\n      self.indentEnabled,\n      self.maxDepth,\n      true,\n    );\n\n    // Save the position of the table.\n    self.table.topY = $(self.table).offset().top;\n    self.table.bottomY = self.table.topY + self.table.offsetHeight;\n\n    const dragClasses = [\n      'bg-cyan-lightest'\n    ];\n\n    // Add classes to the handle and row.\n    $(item).addClass(dragClasses.join(' '));\n\n    // Set the document to use the move cursor during drag.\n    $('body').addClass('drag');\n    if (self.oldRowElement) {\n      $(self.oldRowElement).removeClass('drag-previous');\n    }\n  };\n\n  /**\n   * Pointer movement handler, bound to document.\n   *\n   * @param {jQuery.Event} event\n   *   The pointer event.\n   * @param {Drupal.tableDrag} self\n   *   The tableDrag instance.\n   *\n   * @return {bool|undefined}\n   *   Undefined if no dragObject is defined, false otherwise.\n   */\n  Drupal.tableDrag.prototype.dragRow = function (event, self) {\n    if (self.dragObject) {\n      self.currentPointerCoords = self.pointerCoords(event);\n      const y = self.currentPointerCoords.y - self.dragObject.initOffset.y;\n      const x = self.currentPointerCoords.x - self.dragObject.initOffset.x;\n\n      // Check for row swapping and vertical scrolling.\n      if (y !== self.oldY) {\n        self.rowObject.direction = y > self.oldY ? 'down' : 'up';\n        // Update the old value.\n        self.oldY = y;\n        // Check if the window should be scrolled (and how fast).\n        const scrollAmount = self.checkScroll(self.currentPointerCoords.y);\n        // Stop any current scrolling.\n        clearInterval(self.scrollInterval);\n        // Continue scrolling if the mouse has moved in the scroll direction.\n        if (\n          (scrollAmount > 0 && self.rowObject.direction === 'down') ||\n          (scrollAmount < 0 && self.rowObject.direction === 'up')\n        ) {\n          self.setScroll(scrollAmount);\n        }\n\n        // If we have a valid target, perform the swap and restripe the table.\n        const currentRow = self.findDropTargetRow(x, y);\n        if (currentRow) {\n          if (self.rowObject.direction === 'down') {\n            self.rowObject.swap('after', currentRow, self);\n          } else {\n            self.rowObject.swap('before', currentRow, self);\n          }\n          if (self.striping === true) {\n            self.restripeTable();\n          }\n        }\n      }\n\n      // Similar to row swapping, handle indentations.\n      if (self.indentEnabled) {\n        const xDiff =\n          self.currentPointerCoords.x - self.dragObject.indentPointerPos.x;\n        // Set the number of indentations the pointer has been moved left or\n        // right.\n        const indentDiff = Math.round(xDiff / self.indentAmount);\n        // Indent the row with our estimated diff, which may be further\n        // restricted according to the rows around this row.\n        const indentChange = self.rowObject.indent(indentDiff);\n        // Update table and pointer indentations.\n        self.dragObject.indentPointerPos.x +=\n          self.indentAmount * indentChange * self.rtl;\n        self.indentCount = Math.max(self.indentCount, self.rowObject.indents);\n      }\n\n      return false;\n    }\n  };\n\n  /**\n   * Pointerup behavior.\n   *\n   * @param {jQuery.Event} event\n   *   The pointer event.\n   * @param {Drupal.tableDrag} self\n   *   The tableDrag instance.\n   */\n  Drupal.tableDrag.prototype.dropRow = function (event, self) {\n    let droppedRow;\n    let $droppedRow;\n\n    // Drop row functionality.\n    if (self.rowObject !== null) {\n      droppedRow = self.rowObject.element;\n      $droppedRow = $(droppedRow);\n      // The row is already in the right place so we just release it.\n      if (self.rowObject.changed === true) {\n        // Update the fields in the dropped row.\n        self.updateFields(droppedRow);\n\n        // If a setting exists for affecting the entire group, update all the\n        // fields in the entire dragged group.\n        Object.keys(self.tableSettings || {}).forEach(group => {\n          const rowSettings = self.rowSettings(group, droppedRow);\n          if (rowSettings.relationship === 'group') {\n            Object.keys(self.rowObject.children || {}).forEach(n => {\n              self.updateField(self.rowObject.children[n], group);\n            });\n          }\n        });\n\n        self.rowObject.markChanged();\n        if (self.changed === false) {\n          $(Drupal.theme('tableDragChangedWarning'))\n            .insertBefore(self.table)\n            .hide()\n            .fadeIn('slow');\n          self.changed = true;\n        }\n      }\n\n      if (self.indentEnabled) {\n        self.rowObject.removeIndentClasses();\n      }\n      if (self.oldRowElement) {\n        $(self.oldRowElement).removeClass('drag-previous');\n      }\n      $droppedRow.removeClass('drag').addClass('drag-previous');\n      self.oldRowElement = droppedRow;\n      self.onDrop();\n      self.rowObject = null;\n    }\n\n    // Functionality specific only to pointerup events.\n    if (self.dragObject !== null) {\n      self.dragObject = null;\n      $('body').removeClass('drag');\n      clearInterval(self.scrollInterval);\n    }\n  };\n\n  /**\n   * Get the coordinates from the event (allowing for browser differences).\n   *\n   * @param {jQuery.Event} event\n   *   The pointer event.\n   *\n   * @return {object}\n   *   An object with `x` and `y` keys indicating the position.\n   */\n  Drupal.tableDrag.prototype.pointerCoords = function (event) {\n    if (event.pageX || event.pageY) {\n      return { x: event.pageX, y: event.pageY };\n    }\n    return {\n      x: event.clientX + document.body.scrollLeft - document.body.clientLeft,\n      y: event.clientY + document.body.scrollTop - document.body.clientTop,\n    };\n  };\n\n  /**\n   * Get the event offset from the target element.\n   *\n   * Given a target element and a pointer event, get the event offset from that\n   * element. To do this we need the element's position and the target position.\n   *\n   * @param {HTMLElement} target\n   *   The target HTML element.\n   * @param {jQuery.Event} event\n   *   The pointer event.\n   *\n   * @return {object}\n   *   An object with `x` and `y` keys indicating the position.\n   */\n  Drupal.tableDrag.prototype.getPointerOffset = function (target, event) {\n    const docPos = $(target).offset();\n    const pointerPos = this.pointerCoords(event);\n    return { x: pointerPos.x - docPos.left, y: pointerPos.y - docPos.top };\n  };\n\n  /**\n   * Find the row the mouse is currently over.\n   *\n   * This row is then taken and swapped with the one being dragged.\n   *\n   * @param {number} x\n   *   The x coordinate of the mouse on the page (not the screen).\n   * @param {number} y\n   *   The y coordinate of the mouse on the page (not the screen).\n   *\n   * @return {*}\n   *   The drop target row, if found.\n   */\n  Drupal.tableDrag.prototype.findDropTargetRow = function (x, y) {\n    const rows = $(this.table.tBodies[0].rows).not(':hidden');\n    for (let n = 0; n < rows.length; n++) {\n      let row = rows[n];\n      let $row = $(row);\n      const rowY = $row.offset().top;\n      let rowHeight;\n      // Because Safari does not report offsetHeight on table rows, but does on\n      // table cells, grab the firstChild of the row and use that instead.\n      // http://jacob.peargrove.com/blog/2006/technical/table-row-offsettop-bug-in-safari.\n      if (row.offsetHeight === 0) {\n        rowHeight = parseInt(row.firstChild.offsetHeight, 10) / 2;\n      }\n      // Other browsers.\n      else {\n        rowHeight = parseInt(row.offsetHeight, 10) / 2;\n      }\n\n      // Because we always insert before, we need to offset the height a bit.\n      if (y > rowY - rowHeight && y < rowY + rowHeight) {\n        if (this.indentEnabled) {\n          // Check that this row is not a child of the row being dragged.\n          if (\n            Object.keys(this.rowObject.group).some(\n              o => this.rowObject.group[o] === row,\n            )\n          ) {\n            return null;\n          }\n        }\n        // Do not allow a row to be swapped with itself.\n        else if (row === this.rowObject.element) {\n          return null;\n        }\n\n        // Check that swapping with this row is allowed.\n        if (!this.rowObject.isValidSwap(row)) {\n          return null;\n        }\n\n        // We may have found the row the mouse just passed over, but it doesn't\n        // take into account hidden rows. Skip backwards until we find a\n        // draggable row.\n        while ($row.is(':hidden') && $row.prev('tr').is(':hidden')) {\n          $row = $row.prev('tr:first-of-type');\n          row = $row.get(0);\n        }\n        return row;\n      }\n    }\n    return null;\n  };\n\n  /**\n   * After the row is dropped, update the table fields.\n   *\n   * @param {HTMLElement} changedRow\n   *   DOM object for the row that was just dropped.\n   */\n  Drupal.tableDrag.prototype.updateFields = function (changedRow) {\n    Object.keys(this.tableSettings || {}).forEach(group => {\n      // Each group may have a different setting for relationship, so we find\n      // the source rows for each separately.\n      this.updateField(changedRow, group);\n    });\n  };\n\n  /**\n   * After the row is dropped, update a single table field.\n   *\n   * @param {HTMLElement} changedRow\n   *   DOM object for the row that was just dropped.\n   * @param {string} group\n   *   The settings group on which field updates will occur.\n   */\n  Drupal.tableDrag.prototype.updateField = function (changedRow, group) {\n    let rowSettings = this.rowSettings(group, changedRow);\n    const $changedRow = $(changedRow);\n    let sourceRow;\n    let $previousRow;\n    let previousRow;\n    let useSibling;\n    // Set the row as its own target.\n    if (\n      rowSettings.relationship === 'self' ||\n      rowSettings.relationship === 'group'\n    ) {\n      sourceRow = changedRow;\n    }\n    // Siblings are easy, check previous and next rows.\n    else if (rowSettings.relationship === 'sibling') {\n      $previousRow = $changedRow.prev('tr:first-of-type');\n      previousRow = $previousRow.get(0);\n      const $nextRow = $changedRow.next('tr:first-of-type');\n      const nextRow = $nextRow.get(0);\n      sourceRow = changedRow;\n      if (\n        $previousRow.is('.draggable') &&\n        $previousRow.find(`.${group}`).length\n      ) {\n        if (this.indentEnabled) {\n          if (\n            $previousRow.find('.js-indentations').length ===\n            $changedRow.find('.js-indentations').length\n          ) {\n            sourceRow = previousRow;\n          }\n        } else {\n          sourceRow = previousRow;\n        }\n      } else if (\n        $nextRow.is('.draggable') &&\n        $nextRow.find(`.${group}`).length\n      ) {\n        if (this.indentEnabled) {\n          if (\n            $nextRow.find('.js-indentations').length ===\n            $changedRow.find('.js-indentations').length\n          ) {\n            sourceRow = nextRow;\n          }\n        } else {\n          sourceRow = nextRow;\n        }\n      }\n    }\n    // Parents, look up the tree until we find a field not in this group.\n    // Go up as many parents as indentations in the changed row.\n    else if (rowSettings.relationship === 'parent') {\n      $previousRow = $changedRow.prev('tr');\n      previousRow = $previousRow;\n      while (\n        $previousRow.length &&\n        $previousRow.find('.js-indentation').length >= this.rowObject.indents\n      ) {\n        $previousRow = $previousRow.prev('tr');\n        previousRow = $previousRow;\n      }\n      // If we found a row.\n      if ($previousRow.length) {\n        sourceRow = $previousRow.get(0);\n      }\n      // Otherwise we went all the way to the left of the table without finding\n      // a parent, meaning this item has been placed at the root level.\n      else {\n        // Use the first row in the table as source, because it's guaranteed to\n        // be at the root level. Find the first item, then compare this row\n        // against it as a sibling.\n        sourceRow = $(this.table)\n          .find('tr.draggable:first-of-type')\n          .get(0);\n        if (sourceRow === this.rowObject.element) {\n          sourceRow = $(this.rowObject.group[this.rowObject.group.length - 1])\n            .next('tr.draggable')\n            .get(0);\n        }\n        useSibling = true;\n      }\n    }\n\n    // Because we may have moved the row from one category to another,\n    // take a look at our sibling and borrow its sources and targets.\n    this.copyDragClasses(sourceRow, changedRow, group);\n    rowSettings = this.rowSettings(group, changedRow);\n\n    // In the case that we're looking for a parent, but the row is at the top\n    // of the tree, copy our sibling's values.\n    if (useSibling) {\n      rowSettings.relationship = 'sibling';\n      rowSettings.source = rowSettings.target;\n    }\n\n    const targetClass = `.${rowSettings.target}`;\n    const targetElement = $changedRow.find(targetClass).get(0);\n\n    // Check if a target element exists in this row.\n    if (targetElement) {\n      const sourceClass = `.${rowSettings.source}`;\n      const sourceElement = $(sourceClass, sourceRow).get(0);\n      switch (rowSettings.action) {\n        case 'depth':\n          // Get the depth of the target row.\n          targetElement.value = $(sourceElement)\n            .closest('tr')\n            .find('.js-indentation').length;\n          break;\n\n        case 'match':\n          // Update the value.\n          targetElement.value = sourceElement.value;\n          break;\n\n        case 'order': {\n          const siblings = this.rowObject.findSiblings(rowSettings);\n          if ($(targetElement).is('select')) {\n            // Get a list of acceptable values.\n            const values = [];\n            $(targetElement)\n              .find('option')\n              .each(function () {\n                values.push(this.value);\n              });\n            const maxVal = values[values.length - 1];\n            // Populate the values in the siblings.\n            $(siblings)\n              .find(targetClass)\n              .each(function () {\n                // If there are more items than possible values, assign the\n                // maximum value to the row.\n                if (values.length > 0) {\n                  this.value = values.shift();\n                } else {\n                  this.value = maxVal;\n                }\n              });\n          } else {\n            // Assume a numeric input field.\n            let weight =\n              parseInt(\n                $(siblings[0])\n                  .find(targetClass)\n                  .val(),\n                10,\n              ) || 0;\n            $(siblings)\n              .find(targetClass)\n              .each(function () {\n                this.value = weight;\n                weight++;\n              });\n          }\n          break;\n        }\n      }\n    }\n  };\n\n  /**\n   * Copy all tableDrag related classes from one row to another.\n   *\n   * Copy all special tableDrag classes from one row's form elements to a\n   * different one, removing any special classes that the destination row\n   * may have had.\n   *\n   * @param {HTMLElement} sourceRow\n   *   The element for the source row.\n   * @param {HTMLElement} targetRow\n   *   The element for the target row.\n   * @param {string} group\n   *   The group selector.\n   */\n  Drupal.tableDrag.prototype.copyDragClasses = function (\n    sourceRow,\n    targetRow,\n    group,\n  ) {\n    const sourceElement = $(sourceRow).find(`.${group}`);\n    const targetElement = $(targetRow).find(`.${group}`);\n    if (sourceElement.length && targetElement.length) {\n      targetElement[0].className = sourceElement[0].className;\n    }\n  };\n\n  /**\n   * Check the suggested scroll of the table.\n   *\n   * @param {number} cursorY\n   *   The Y position of the cursor.\n   *\n   * @return {number}\n   *   The suggested scroll.\n   */\n  Drupal.tableDrag.prototype.checkScroll = function (cursorY) {\n    const de = document.documentElement;\n    const b = document.body;\n\n    const windowHeight =\n      window.innerHeight ||\n      (de.clientHeight && de.clientWidth !== 0\n        ? de.clientHeight\n        : b.offsetHeight);\n    this.windowHeight = windowHeight;\n    let scrollY;\n    if (document.all) {\n      scrollY = !de.scrollTop ? b.scrollTop : de.scrollTop;\n    } else {\n      scrollY = window.pageYOffset ? window.pageYOffset : window.scrollY;\n    }\n    this.scrollY = scrollY;\n    const trigger = this.scrollSettings.trigger;\n    let delta = 0;\n\n    // Return a scroll speed relative to the edge of the screen.\n    if (cursorY - scrollY > windowHeight - trigger) {\n      delta = trigger / (windowHeight + scrollY - cursorY);\n      delta = delta > 0 && delta < trigger ? delta : trigger;\n      return delta * this.scrollSettings.amount;\n    }\n    if (cursorY - scrollY < trigger) {\n      delta = trigger / (cursorY - scrollY);\n      delta = delta > 0 && delta < trigger ? delta : trigger;\n      return -delta * this.scrollSettings.amount;\n    }\n  };\n\n  /**\n   * Set the scroll for the table.\n   *\n   * @param {number} scrollAmount\n   *   The amount of scroll to apply to the window.\n   */\n  Drupal.tableDrag.prototype.setScroll = function (scrollAmount) {\n    const self = this;\n\n    this.scrollInterval = setInterval(() => {\n      // Update the scroll values stored in the object.\n      self.checkScroll(self.currentPointerCoords.y);\n      const aboveTable = self.scrollY > self.table.topY;\n      const belowTable = self.scrollY + self.windowHeight < self.table.bottomY;\n      if (\n        (scrollAmount > 0 && belowTable) ||\n        (scrollAmount < 0 && aboveTable)\n      ) {\n        window.scrollBy(0, scrollAmount);\n      }\n    }, this.scrollSettings.interval);\n  };\n\n  /**\n   * Command to restripe table properly.\n   */\n  Drupal.tableDrag.prototype.restripeTable = function () {\n    // :even and :odd are reversed because jQuery counts from 0 and\n    // we count from 1, so we're out of sync.\n    // Match immediate children of the parent element to allow nesting.\n    $(this.table)\n      .find('> tbody > tr.draggable, > tr.draggable')\n      .filter(':visible')\n      .filter(':odd')\n      .removeClass('odd')\n      .addClass('even')\n      .end()\n      .filter(':even')\n      .removeClass('even')\n      .addClass('odd');\n  };\n\n  /**\n   * Stub function. Allows a custom handler when a row begins dragging.\n   *\n   * @return {null}\n   *   Returns null when the stub function is used.\n   */\n  Drupal.tableDrag.prototype.onDrag = function () {\n    return null;\n  };\n\n  /**\n   * Stub function. Allows a custom handler when a row is dropped.\n   *\n   * @return {null}\n   *   Returns null when the stub function is used.\n   */\n  Drupal.tableDrag.prototype.onDrop = function () {\n    return null;\n  };\n\n  /**\n   * Constructor to make a new object to manipulate a table row.\n   *\n   * @param {HTMLElement} tableRow\n   *   The DOM element for the table row we will be manipulating.\n   * @param {string} method\n   *   The method in which this row is being moved. Either 'keyboard' or\n   *   'mouse'.\n   * @param {bool} indentEnabled\n   *   Whether the containing table uses indentations. Used for optimizations.\n   * @param {number} maxDepth\n   *   The maximum amount of indentations this row may contain.\n   * @param {bool} addClasses\n   *   Whether we want to add classes to this row to indicate child\n   *   relationships.\n   */\n  Drupal.tableDrag.prototype.row = function (\n    tableRow,\n    method,\n    indentEnabled,\n    maxDepth,\n    addClasses,\n  ) {\n    const $tableRow = $(tableRow);\n\n    this.element = tableRow;\n    this.method = method;\n    this.group = [tableRow];\n    this.groupDepth = $tableRow.find('.js-indentation').length;\n    this.changed = false;\n    this.table = $tableRow.closest('table')[0];\n    this.indentEnabled = indentEnabled;\n    this.maxDepth = maxDepth;\n    // Direction the row is being moved.\n    this.direction = '';\n    if (this.indentEnabled) {\n      this.indents = $tableRow.find('.js-indentation').length;\n      this.children = this.findChildren(addClasses);\n      this.group = $.merge(this.group, this.children);\n      // Find the depth of this entire group.\n      for (let n = 0; n < this.group.length; n++) {\n        this.groupDepth = Math.max(\n          $(this.group[n]).find('.js-indentation').length,\n          this.groupDepth,\n        );\n      }\n    }\n  };\n\n  /**\n   * Find all children of rowObject by indentation.\n   *\n   * @param {bool} addClasses\n   *   Whether we want to add classes to this row to indicate child\n   *   relationships.\n   *\n   * @return {Array}\n   *   An array of children of the row.\n   */\n  Drupal.tableDrag.prototype.row.prototype.findChildren = function (addClasses) {\n    const parentIndentation = this.indents;\n    let currentRow = $(this.element, this.table).next('tr.draggable');\n    const rows = [];\n    let child = 0;\n\n    function rowIndentation(indentNum, el) {\n      const self = $(el);\n      if (child === 1 && indentNum === parentIndentation) {\n        self.addClass('tree-child-first');\n      }\n      if (indentNum === parentIndentation) {\n        self.addClass('tree-child');\n      } else if (indentNum > parentIndentation) {\n        self.addClass('tree-child-horizontal');\n      }\n    }\n\n    while (currentRow.length) {\n      // A greater indentation indicates this is a child.\n      if (currentRow.find('.js-indentation').length > parentIndentation) {\n        child++;\n        rows.push(currentRow[0]);\n        if (addClasses) {\n          currentRow.find('.js-indentation').each(rowIndentation);\n        }\n      } else {\n        break;\n      }\n      currentRow = currentRow.next('tr.draggable');\n    }\n    if (addClasses && rows.length) {\n      $(rows[rows.length - 1])\n        .find(`.js-indentation:nth-child(${parentIndentation + 1})`)\n        .addClass('tree-child-last');\n    }\n    return rows;\n  };\n\n  /**\n   * Ensure that two rows are allowed to be swapped.\n   *\n   * @param {HTMLElement} row\n   *   DOM object for the row being considered for swapping.\n   *\n   * @return {bool}\n   *   Whether the swap is a valid swap or not.\n   */\n  Drupal.tableDrag.prototype.row.prototype.isValidSwap = function (row) {\n    const $row = $(row);\n    if (this.indentEnabled) {\n      let prevRow;\n      let nextRow;\n      if (this.direction === 'down') {\n        prevRow = row;\n        nextRow = $row.next('tr').get(0);\n      } else {\n        prevRow = $row.prev('tr').get(0);\n        nextRow = row;\n      }\n      this.interval = this.validIndentInterval(prevRow, nextRow);\n\n      // We have an invalid swap if the valid indentations interval is empty.\n      if (this.interval.min > this.interval.max) {\n        return false;\n      }\n    }\n\n    // Do not let an un-draggable first row have anything put before it.\n    if (this.table.tBodies[0].rows[0] === row && $row.is(':not(.draggable)')) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Perform the swap between two rows.\n   *\n   * @param {string} position\n   *   Whether the swap will occur 'before' or 'after' the given row.\n   * @param {HTMLElement} row\n   *   DOM element what will be swapped with the row group.\n   */\n  Drupal.tableDrag.prototype.row.prototype.swap = function (position, row) {\n    // Makes sure only DOM object are passed to Drupal.detachBehaviors().\n    this.group.forEach(row => {\n      Drupal.detachBehaviors(row, drupalSettings, 'move');\n    });\n    $(row)[position](this.group);\n    // Makes sure only DOM object are passed to Drupal.attachBehaviors()s.\n    this.group.forEach(row => {\n      Drupal.attachBehaviors(row, drupalSettings);\n    });\n    this.changed = true;\n    this.onSwap(row);\n  };\n\n  /**\n   * Determine the valid indentations interval for the row at a given position.\n   *\n   * @param {?HTMLElement} prevRow\n   *   DOM object for the row before the tested position\n   *   (or null for first position in the table).\n   * @param {?HTMLElement} nextRow\n   *   DOM object for the row after the tested position\n   *   (or null for last position in the table).\n   *\n   * @return {object}\n   *   An object with the keys `min` and `max` to indicate the valid indent\n   *   interval.\n   */\n  Drupal.tableDrag.prototype.row.prototype.validIndentInterval = function (\n    prevRow,\n    nextRow,\n  ) {\n    const $prevRow = $(prevRow);\n    let maxIndent;\n\n    // Minimum indentation:\n    // Do not orphan the next row.\n    const minIndent = nextRow ? $(nextRow).find('.js-indentation').length : 0;\n\n    // Maximum indentation:\n    if (\n      !prevRow ||\n      $prevRow.is(':not(.draggable)') ||\n      $(this.element).is('.tabledrag-root')\n    ) {\n      // Do not indent:\n      // - the first row in the table,\n      // - rows dragged below a non-draggable row,\n      // - 'root' rows.\n      maxIndent = 0;\n    } else {\n      // Do not go deeper than as a child of the previous row.\n      maxIndent =\n        $prevRow.find('.js-indentation').length +\n        ($prevRow.is('.tabledrag-leaf') ? 0 : 1);\n      // Limit by the maximum allowed depth for the table.\n      if (this.maxDepth) {\n        maxIndent = Math.min(\n          maxIndent,\n          this.maxDepth - (this.groupDepth - this.indents),\n        );\n      }\n    }\n\n    return { min: minIndent, max: maxIndent };\n  };\n\n  /**\n   * Indent a row within the legal bounds of the table.\n   *\n   * @param {number} indentDiff\n   *   The number of additional indentations proposed for the row (can be\n   *   positive or negative). This number will be adjusted to nearest valid\n   *   indentation level for the row.\n   *\n   * @return {number}\n   *   The number of indentations applied.\n   */\n  Drupal.tableDrag.prototype.row.prototype.indent = function (indentDiff) {\n    const $group = $(this.group);\n    // Determine the valid indentations interval if not available yet.\n    if (!this.interval) {\n      const prevRow = $(this.element)\n        .prev('tr')\n        .get(0);\n      const nextRow = $group\n        .eq(-1)\n        .next('tr')\n        .get(0);\n      this.interval = this.validIndentInterval(prevRow, nextRow);\n    }\n\n    // Adjust to the nearest valid indentation.\n    let indent = this.indents + indentDiff;\n    indent = Math.max(indent, this.interval.min);\n    indent = Math.min(indent, this.interval.max);\n    indentDiff = indent - this.indents;\n\n    for (let n = 1; n <= Math.abs(indentDiff); n++) {\n      // Add or remove indentations.\n      if (indentDiff < 0) {\n        $group.find('.js-indentation:first-of-type').remove();\n        this.indents--;\n      } else {\n        $group\n          .find('td:first-of-type')\n          .prepend(Drupal.theme('tableDragIndentation'));\n        this.indents++;\n      }\n    }\n    if (indentDiff) {\n      // Update indentation for this row.\n      this.changed = true;\n      this.groupDepth += indentDiff;\n      this.onIndent();\n    }\n\n    return indentDiff;\n  };\n\n  /**\n   * Find all siblings for a row.\n   *\n   * According to its subgroup or indentation. Note that the passed-in row is\n   * included in the list of siblings.\n   *\n   * @param {object} rowSettings\n   *   The field settings we're using to identify what constitutes a sibling.\n   *\n   * @return {Array}\n   *   An array of siblings.\n   */\n  Drupal.tableDrag.prototype.row.prototype.findSiblings = function (\n    rowSettings,\n  ) {\n    const siblings = [];\n    const directions = ['prev', 'next'];\n    const rowIndentation = this.indents;\n    let checkRowIndentation;\n    for (let d = 0; d < directions.length; d++) {\n      let checkRow = $(this.element)[directions[d]]();\n      while (checkRow.length) {\n        // Check that the sibling contains a similar target field.\n        if (checkRow.find(`.${rowSettings.target}`)) {\n          // Either add immediately if this is a flat table, or check to ensure\n          // that this row has the same level of indentation.\n          if (this.indentEnabled) {\n            checkRowIndentation = checkRow.find('.js-indentation').length;\n          }\n\n          if (!this.indentEnabled || checkRowIndentation === rowIndentation) {\n            siblings.push(checkRow[0]);\n          } else if (checkRowIndentation < rowIndentation) {\n            // No need to keep looking for siblings when we get to a parent.\n            break;\n          }\n        } else {\n          break;\n        }\n        checkRow = checkRow[directions[d]]();\n      }\n      // Since siblings are added in reverse order for previous, reverse the\n      // completed list of previous siblings. Add the current row and continue.\n      if (directions[d] === 'prev') {\n        siblings.reverse();\n        siblings.push(this.element);\n      }\n    }\n    return siblings;\n  };\n\n  /**\n   * Remove indentation helper classes from the current row group.\n   */\n  Drupal.tableDrag.prototype.row.prototype.removeIndentClasses = function () {\n    Object.keys(this.children || {}).forEach(n => {\n      $(this.children[n])\n        .find('.js-indentation')\n        .removeClass('tree-child')\n        .removeClass('tree-child-first')\n        .removeClass('tree-child-last')\n        .removeClass('tree-child-horizontal');\n    });\n  };\n\n  /**\n   * Add an asterisk or other marker to the changed row.\n   */\n  Drupal.tableDrag.prototype.row.prototype.markChanged = function () {\n    const marker = Drupal.theme('tableDragChangedMarker');\n    const cell = $(this.element).find('td:first-of-type');\n    if (cell.find('.tabledrag-changed').length === 0) {\n      cell.append(marker);\n    }\n  };\n\n  /**\n   * Stub function. Allows a custom handler when a row is indented.\n   *\n   * @return {null}\n   *   Returns null when the stub function is used.\n   */\n  Drupal.tableDrag.prototype.row.prototype.onIndent = function () {\n    return null;\n  };\n\n  /**\n   * Stub function. Allows a custom handler when a row is swapped.\n   *\n   * @param {HTMLElement} swappedRow\n   *   The element for the swapped row.\n   *\n   * @return {null}\n   *   Returns null when the stub function is used.\n   */\n  Drupal.tableDrag.prototype.row.prototype.onSwap = function (swappedRow) {\n    return null;\n  };\n\n  $.extend(\n    Drupal.theme,\n    /** @lends Drupal.theme */ {\n      /**\n       * @return {string}\n       *  Markup for the marker.\n       */\n      tableDragChangedMarker() {\n        const markerClasses = [\n          'tabledrag-changed',\n          'text-purple-darkest',\n          'font-bold',\n          'mr-3',\n        ];\n\n        return `\n        <span title=\"${Drupal.t('Changed')}\" class=\"${markerClasses.join(' ')}\">${info}</span>`;\n      },\n\n      /**\n       * @return {string}\n       *   Markup for the indentation.\n       */\n      tableDragIndentation() {\n        return '<div class=\"js-indentation indentation\">&nbsp;</div>';\n      },\n\n      /**\n       * @return {string}\n       *   Markup for the warning.\n       */\n      tableDragChangedWarning() {\n        const warningClasses = [\n          ''\n        ];\n\n        return `\n        <div role=\"alert\" class=\"bg-purple-lightest border-t-4 border-purple rounded-b text-purple-darkest px-4 py-3 shadow-md mb-4\">\n          <div class=\"flex\">\n            ${Drupal.theme('tableDragChangedMarker')}\n            <div>\n              ${Drupal.t('You have unsaved changes.')}\n            </div>\n          </div>\n        </div>`;\n\n        return `<div class=\"bg-indigo-darkest text-center py-4 lg:px-4\">\n          <div class=\"p-2 bg-indigo-darker items-center text-indigo-lightest leading-none lg:rounded-full flex lg:inline-flex\" role=\"alert\">\n            ${Drupal.theme('tableDragChangedMarker')}\n            <span class=\"font-semibold mr-2 text-left flex-auto\">${Drupal.t('You have unsaved changes.')}</span>\n          </div>\n        </div>`;\n      },\n    },\n  );\n})(jQuery, Drupal, drupalSettings);\n","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin"],"sourceRoot":""}